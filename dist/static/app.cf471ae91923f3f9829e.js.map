{"version":3,"sources":["webpack:///app.cf471ae91923f3f9829e.js","webpack:///webpack/bootstrap 8a6e4f1e1551447c443e","webpack:///./src/main.js","webpack:///./~/vue-resource/src/util.js","webpack:///./~/vue-resource/src/promise.js","webpack:///./src/assets/logo.png","webpack:///App.vue","webpack:///Members.vue","webpack:///./src/assets/l2.png","webpack:///./src/assets/stud.png","webpack:///./src/App.vue?d818","webpack:///./src/Members.vue?6d09","webpack:///./src/App.vue","webpack:///./src/Members.vue","webpack:///./~/vue-resource/src/http/before.js","webpack:///./~/vue-resource/src/http/client/index.js","webpack:///./~/vue-resource/src/http/client/jsonp.js","webpack:///./~/vue-resource/src/http/client/xdr.js","webpack:///./~/vue-resource/src/http/client/xhr.js","webpack:///./~/vue-resource/src/http/cors.js","webpack:///./~/vue-resource/src/http/header.js","webpack:///./~/vue-resource/src/http/index.js","webpack:///./~/vue-resource/src/http/interceptor.js","webpack:///./~/vue-resource/src/http/jsonp.js","webpack:///./~/vue-resource/src/http/method.js","webpack:///./~/vue-resource/src/http/mime.js","webpack:///./~/vue-resource/src/http/timeout.js","webpack:///./~/vue-resource/src/index.js","webpack:///./~/vue-resource/src/lib/promise.js","webpack:///./~/vue-resource/src/lib/url-template.js","webpack:///./~/vue-resource/src/resource.js","webpack:///./~/vue-resource/src/url/index.js","webpack:///./~/vue-resource/src/url/legacy.js","webpack:///./~/vue-resource/src/url/query.js","webpack:///./~/vue-resource/src/url/root.js","webpack:///./~/vue-resource/src/url/template.js","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","_Members","_Members2","use","el","components","App","Members","data","page","profileOfUser","userInfo","ready","this","getPage","methods","queryString","window","location","search","substring","$set","arr","split","transition","enterClass","leaveClass","merge","target","source","deep","key","_","isPlainObject","isArray","undefined","array","console","warn","msg","warning","config","silent","debug","error","trim","str","replace","toLower","toLowerCase","Array","isString","val","isFunction","isObject","Object","getPrototypeOf","prototype","options","fn","bind","$vm","$options","each","iterator","i","length","hasOwnProperty","defaults","extend","args","slice","arguments","forEach","arg","Promise","executor","context","PromiseObj","promise","all","iterable","resolve","value","reject","reason","race","then","fulfilled","rejected","callback","success","response","status","always","cb","defineProperty","name","message","patient_name","thanks","messages","numOfMessages","profile","getProfileImage","getMembers","$http","get","log","jsonp","setTimeout","prof","__vue_script__","__vue_template__","template","request","beforeSend","parseHeaders","headers","row","indexOf","push","xhrClient","client","ok","handler","script","Math","random","toString","substr","params","cancel","type","document","createElement","src","url","async","event","body","removeChild","onload","onerror","appendChild","xdr","XDomainRequest","abort","open","method","responseText","statusText","timeout","onabort","ontimeout","onprogress","send","xhr","XMLHttpRequest","getAllResponseHeaders","upload","header","setRequestHeader","crossOrigin","requestUrl","parse","protocol","originUrl","host","xdrClient","xhrCors","href","emulateHTTP","toUpperCase","http","common","custom","test","Http","Client","interceptors","interceptor","Error","jsonType","Content-Type","emulateJSON","put","post","patch","delete","Accept","X-Requested-With","when","vm","jsonpClient","JSON","stringify","e","clearTimeout","install","Vue","util","nextTick","resource","defineProperties","$url","$resource","$promise","state","PENDING","deferred","x","r","RESOLVED","REJECTED","resolver","result","count","TypeError","called","notify","shift","onResolved","onRejected","expand","variables","tmpl","expanded","apply","vars","operators","expression","literal","operator","values","charAt","variable","tmp","exec","getValues","separator","join","encodeReserved","modifier","isDefined","parseInt","encodeValue","isKeyOperator","filter","keys","k","encodeURIComponent","map","part","encodeURI","Resource","actions","self","action","opts","save","query","update","remove","Url","transform","transforms","factory","next","serialize","scope","hash","plain","add","ie","documentMode","root","escape","port","hostname","pathname","encodeUriSegment","encodeUriQuery","spaces","match","slash","urlParams","UrlTemplate","global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","vms","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","camelize","camelizeRE","toUpper","hyphenate","hyphenateRE","classify","classifyRE","ctx","l","toArray","list","start","ret","to","from","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timestamp","later","last","Date","now","cancellable","cancelled","looseEqual","Cache","limit","size","head","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","filterTokenRE","processFilterArg","dir","filters","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","escapeRegex","regexEscapeRE","compileRegex","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","prepend","firstChild","replaceChild","on","useCapture","addEventListener","off","removeEventListener","setClass","cls","isIE9","namespaceURI","className","setAttribute","addClass","classList","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","path","coerceProp","assertProp","required","raw","expectedType","valid","String","Boolean","Function","validator","coerce","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","assertAsset","Dep","uid$1","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","compileSetter","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","user","q","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","codes","charCode","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","stringToObject","callActivateHooks","total","pushJob","job","queue$1","flush","f","offsetHeight","Transition","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","matched","parseModifiers","modifierRE","transitionRE","bindRE","onRE","dirAttrRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","scanSlots","select","slot","selector","contents","extractFragment","_slotContents","slots","hasDefault","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","handlers","j","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","delimiter","convertArray","item","reduce","$value","contains$1","$key","orderBy","sortKey","reverse","order","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","mixin","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","entry","newer","older","returnEntry","freeze","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","paramAttributes","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","depIds","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","uid$3","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseFactory","elseFrag","show","elseEl","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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","file":"app.cf471ae91923f3f9829e.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(36);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(12);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _Members = __webpack_require__(13);\n\t\n\tvar _Members2 = _interopRequireDefault(_Members);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(__webpack_require__(27));\n\t\n\tnew _vue2.default({\n\t    el: 'body',\n\t    components: { App: _App2.default, Members: _Members2.default },\n\t    data: {\n\t        page: '',\n\t        profileOfUser: '',\n\t        userInfo: []\n\t    },\n\t\n\t    ready: function ready() {\n\t        this.getPage();\n\t    },\n\t\n\t    methods: {\n\t        getPage: function getPage() {\n\t            var queryString = window.location.search;\n\t            queryString = queryString.substring(1);\n\t            if (!queryString) {\n\t                this.$set('page', '');\n\t            } else if (queryString === 'members') {\n\t                this.$set('page', queryString);\n\t            } else {\n\t                var arr = queryString.split('&');\n\t                this.$set('userInfo', arr);\n\t            }\n\t        }\n\t    }\n\t\n\t});\n\t\n\t_vue2.default.transition('fadein', {\n\t    enterClass: 'pulse',\n\t    leaveClass: 'fadeOut'\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar _ = exports, array = [], console = window.console;\n\t\n\t_.warn = function (msg) {\n\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t};\n\t\n\t_.error = function (msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t};\n\t\n\t_.trim = function (str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t};\n\t\n\t_.toLower = function (str) {\n\t    return str ? str.toLowerCase() : '';\n\t};\n\t\n\t_.isArray = Array.isArray;\n\t\n\t_.isString = function (val) {\n\t    return typeof val === 'string';\n\t};\n\t\n\t_.isFunction = function (val) {\n\t    return typeof val === 'function';\n\t};\n\t\n\t_.isObject = function (obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t};\n\t\n\t_.isPlainObject = function (obj) {\n\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t};\n\t\n\t_.options = function (fn, obj, options) {\n\t\n\t    options = options || {};\n\t\n\t    if (_.isFunction(options)) {\n\t        options = options.call(obj);\n\t    }\n\t\n\t    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n\t};\n\t\n\t_.each = function (obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (_.isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t};\n\t\n\t_.defaults = function (target, source) {\n\t\n\t    for (var key in source) {\n\t        if (target[key] === undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t\n\t    return target;\n\t};\n\t\n\t_.extend = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\t_.merge = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg, true);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\tfunction merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promise adapter.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar PromiseObj = window.Promise || __webpack_require__(28);\n\t\n\tfunction Promise(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise.all = function (iterable, context) {\n\t    return new Promise(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise.resolve = function (value, context) {\n\t    return new Promise(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise.reject = function (reason, context) {\n\t    return new Promise(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise.race = function (iterable, context) {\n\t    return new Promise(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.catch(rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t            callback.call(this);\n\t            return value;\n\t        }, function (reason) {\n\t            callback.call(this);\n\t            return PromiseObj.reject(reason);\n\t        }\n\t    );\n\t};\n\t\n\tp.success = function (callback) {\n\t\n\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.error = function (callback) {\n\t\n\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.always = function (callback) {\n\t\n\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t    var cb = function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\t\n\t    return this.then(cb, cb);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"logo.png?4e4d848\";\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  name: 'App',\n\t\n\t  data: function data() {\n\t    return {\n\t      message: '',\n\t      patient_name: 'Sharon',\n\t      thanks: false,\n\t      userInfo: []\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  name: 'Members',\n\t\n\t  data: function data() {\n\t    return {\n\t      messages: '',\n\t      numOfMessages: '',\n\t      profile: ''\n\t    };\n\t  },\n\t  ready: function ready() {\n\t    this.getProfileImage();\n\t    this.getMembers();\n\t  },\n\t\n\t\n\t  methods: {\n\t    getMembers: function getMembers() {\n\t\n\t      this.$http.get('http://otr.vishnu.io/messages.php', function (data) {\n\t        var msg = data;\n\t        this.$set('messages', msg);\n\t        console.log(msg);\n\t      }, { 'jsonp': 'callback' });\n\t      setTimeout(this.getMembers, 2000);\n\t    },\n\t    getProfileImage: function getProfileImage() {\n\t      this.$http.get('https://randomuser.me/api/').then(function (response) {\n\t        var profile = response.data;\n\t        this.$set('profile', profile);\n\t        var prof = this.messages.length;\n\t        this.$set('numOfMessages', prof);\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"l2.png?457e581\";\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"stud.png?2badad1\";\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=top-nav> <div class=container> <img class=\\\"logo2 animated\\\" src=\" + __webpack_require__(8) + \" transition=fadein /> <img class=\\\"logo animated\\\" src=\" + __webpack_require__(3) + \" transition=fadein /> </div> </div> <div id=app> <div> <div class=\\\"animated chat-box\\\" transition=fadein> <p>Hello, <span>Vishnu, is there anything you'd like to discuss privately with Dr. Sarabu today?</span> </p><p> </p><p>Feel free to write anything, these messages disappear after your doctor sees them.</p><p> </p></div> <div class=\\\"animated chat-box\\\" transition=fadein> <p>You can ask about topics such as sex, birth control, drink, drugs or gender questions.</p> </div> </div> <div class=user-message> <div class=user-container v-if=!thanks> <form action=http://otr.vishnu.io:5000/send method=post> <div> <textarea v-model=message name=message class=textarea-box></textarea> </div> <input @click=\\\"thanks = !thanks\\\" type=submit class=button value=Send> <input type=hidden name=phone_number value=+19085812326> </form> </div> </div> <div v-if=thanks class=animated transition=fadein> <div class=chat-box-reply> <p>{{message}}</p><p> </p></div> </div> <div v-if=thanks class=\\\"animated chat-box\\\" transition=fadein> <p>Thanks Vishnu. The Doctor will address this on your next visit. Enjoy your day! </p><p> </p></div> </div>\";\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \"<div class=top-nav> <div class=container> <h1> Welcome, Dr. Sarabu</h1> <img class=\\\"logo animated\\\" src=\" + __webpack_require__(3) + \" transition=fadein /> </div> </div> <div id=members> <div class=main-container> <h2> You have <span class=animated transition=fadein>{{numOfMessages === '' ? '0' : numOfMessages }} </span>New Message</h2> <div v-for=\\\"user in messages\\\" class=\\\"animated profile-box\\\" id=result transition=fadein> <div class=profile_img><img class=pro src=\" + __webpack_require__(9) + \" /></div> <p>From: <b>Vishnu</b>, {{user.phone_number}}.</p><p> </p><p>Message: {{user.message}}.</p><p> </p></div> </div> </div>\";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(6)\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(10)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(7)\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Before Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (_.isFunction(request.beforeSend)) {\n\t            request.beforeSend.call(this, request);\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Base client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\tvar xhrClient = __webpack_require__(18);\n\t\n\tmodule.exports = function (request) {\n\t\n\t    var response = (request.client || xhrClient)(request);\n\t\n\t    return Promise.resolve(response).then(function (response) {\n\t\n\t        if (response.headers) {\n\t\n\t            var headers = parseHeaders(response.headers);\n\t\n\t            response.headers = function (name) {\n\t\n\t                if (name) {\n\t                    return headers[_.toLower(name)];\n\t                }\n\t\n\t                return headers;\n\t            };\n\t\n\t        }\n\t\n\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t        return response;\n\t    });\n\t\n\t};\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {}, value, name, i;\n\t\n\t    if (_.isString(str)) {\n\t        _.each(str.split('\\n'), function (row) {\n\t\n\t            i = row.indexOf(':');\n\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t            value = _.trim(row.slice(i + 1));\n\t\n\t            if (headers[name]) {\n\t\n\t                if (_.isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t\n\t            } else {\n\t\n\t                headers[name] = value;\n\t            }\n\t\n\t        });\n\t    }\n\t\n\t    return headers;\n\t}\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\t\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({type: 'cancel'});\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = _.url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\t\n\t        handler = function (event) {\n\t\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\t\n\t            resolve(response);\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t};\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText;\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t\n\t        xdr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XMLHttp client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xhr.responseText;\n\t            response.status = xhr.status;\n\t            response.statusText = xhr.statusText;\n\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\t\n\t        if (_.isPlainObject(request.xhr)) {\n\t            _.extend(xhr, request.xhr);\n\t        }\n\t\n\t        if (_.isPlainObject(request.upload)) {\n\t            _.extend(xhr.upload, request.upload);\n\t        }\n\t\n\t        _.each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CORS Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar xdrClient = __webpack_require__(17);\n\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\tvar originUrl = _.url.parse(location.href);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.crossOrigin === null) {\n\t            request.crossOrigin = crossOrigin(request);\n\t        }\n\t\n\t        if (request.crossOrigin) {\n\t\n\t            if (!xhrCors) {\n\t                request.client = xdrClient;\n\t            }\n\t\n\t            request.emulateHTTP = false;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = _.url.parse(_.url(request));\n\t\n\t    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Header Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        request.method = request.method.toUpperCase();\n\t        request.headers = _.extend({}, _.http.headers.common,\n\t            !request.crossOrigin ? _.http.headers.custom : {},\n\t            _.http.headers[request.method.toLowerCase()],\n\t            request.headers\n\t        );\n\t\n\t        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n\t            _.extend(request.params, request.data);\n\t            delete request.data;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Client = __webpack_require__(15);\n\tvar Promise = __webpack_require__(2);\n\tvar interceptor = __webpack_require__(22);\n\tvar jsonType = {'Content-Type': 'application/json'};\n\t\n\tfunction Http(url, options) {\n\t\n\t    var client = Client, request, promise;\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, this.$vm)(client);\n\t    }, this);\n\t\n\t    options = _.isObject(url) ? url : _.extend({url: url}, options);\n\t    request = _.merge({}, Http.options, this.$options, options);\n\t    promise = client(request).bind(this.$vm).then(function (response) {\n\t\n\t        return response.ok ? response : Promise.reject(response);\n\t\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            _.error(response);\n\t        }\n\t\n\t        return Promise.reject(response);\n\t    });\n\t\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\t\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\t\n\tHttp.interceptors = [\n\t    __webpack_require__(14),\n\t    __webpack_require__(26),\n\t    __webpack_require__(23),\n\t    __webpack_require__(24),\n\t    __webpack_require__(25),\n\t    __webpack_require__(20),\n\t    __webpack_require__(19)\n\t];\n\t\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: {'Accept': 'application/json, text/plain, */*'},\n\t    custom: {'X-Requested-With': 'XMLHttpRequest'}\n\t};\n\t\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, data, success, options) {\n\t\n\t        if (_.isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\t\n\t        if (_.isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\t\n\t        return this(url, _.extend({method: method, data: data, success: success}, options));\n\t    };\n\t});\n\t\n\tmodule.exports = _.http = Http;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interceptor factory.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (handler, vm) {\n\t\n\t    return function (client) {\n\t\n\t        if (_.isFunction(handler)) {\n\t            handler = handler.call(vm, Promise);\n\t        }\n\t\n\t        return function (request) {\n\t\n\t            if (_.isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\t\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\t\n\t                    if (_.isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\t\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t};\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP Interceptor.\n\t */\n\t\n\tvar jsonpClient = __webpack_require__(16);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            request.client = jsonpClient;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t            request.headers['X-HTTP-Method-Override'] = request.method;\n\t            request.method = 'POST';\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mime Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateJSON && _.isPlainObject(request.data)) {\n\t            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            request.data = _.url.params(request.data);\n\t        }\n\t\n\t        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n\t            delete request.headers['Content-Type'];\n\t        }\n\t\n\t        if (_.isPlainObject(request.data)) {\n\t            request.data = JSON.stringify(request.data);\n\t        }\n\t\n\t        return request;\n\t    },\n\t\n\t    response: function (response) {\n\t\n\t        try {\n\t            response.data = JSON.parse(response.data);\n\t        } catch (e) {}\n\t\n\t        return response;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tmodule.exports = function () {\n\t\n\t    var timeout;\n\t\n\t    return {\n\t\n\t        request: function (request) {\n\t\n\t            if (request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    request.cancel();\n\t                }, request.timeout);\n\t            }\n\t\n\t            return request;\n\t        },\n\t\n\t        response: function (response) {\n\t\n\t            clearTimeout(timeout);\n\t\n\t            return response;\n\t        }\n\t\n\t    };\n\t};\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Install plugin.\n\t */\n\t\n\tfunction install(Vue) {\n\t\n\t    var _ = __webpack_require__(1);\n\t\n\t    _.config = Vue.config;\n\t    _.warning = Vue.util.warn;\n\t    _.nextTick = Vue.util.nextTick;\n\t\n\t    Vue.url = __webpack_require__(31);\n\t    Vue.http = __webpack_require__(21);\n\t    Vue.resource = __webpack_require__(30);\n\t    Vue.Promise = __webpack_require__(2);\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return _.options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return _.options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, this);\n\t                }.bind(this);\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (window.Vue) {\n\t    Vue.use(install);\n\t}\n\t\n\tmodule.exports = install;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING  = 2;\n\t\n\tfunction Promise(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise.reject = function (r) {\n\t    return new Promise(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise.resolve = function (x) {\n\t    return new Promise(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise.all = function all(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        var count = 0, result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise.race = function race(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.notify = function notify() {\n\t    var promise = this;\n\t\n\t    _.nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\texports.expand = function (url, params, variables) {\n\t\n\t    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t};\n\t\n\texports.parse = function (template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null, values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t\n\t                } else {\n\t                    return exports.encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t};\n\t\n\texports.getValues = function (context, operator, key, modifier) {\n\t\n\t    var value = context[key], result = [];\n\t\n\t    if (this.isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            result.push(this.encodeValue(operator, value[k], k));\n\t                        }\n\t                    }, this);\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        tmp.push(this.encodeValue(operator, value));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    }, this);\n\t                }\n\t\n\t                if (this.isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t};\n\t\n\texports.isDefined = function (value) {\n\t    return value !== undefined && value !== null;\n\t};\n\t\n\texports.isKeyOperator = function (operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t};\n\t\n\texports.encodeValue = function (operator, value, key) {\n\t\n\t    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t};\n\t\n\texports.encodeReserved = function (str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t};\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this, resource = {};\n\t\n\t    actions = _.extend({},\n\t        Resource.actions,\n\t        actions\n\t    );\n\t\n\t    _.each(actions, function (action, name) {\n\t\n\t        action = _.merge({url: url, params: params || {}}, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || _.http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = _.extend({}, action), params = {}, data, success, error;\n\t\n\t    switch (args.length) {\n\t\n\t        case 4:\n\t\n\t            error = args[3];\n\t            success = args[2];\n\t\n\t        case 3:\n\t        case 2:\n\t\n\t            if (_.isFunction(args[1])) {\n\t\n\t                if (_.isFunction(args[0])) {\n\t\n\t                    success = args[0];\n\t                    error = args[1];\n\t\n\t                    break;\n\t                }\n\t\n\t                success = args[1];\n\t                error = args[2];\n\t\n\t            } else {\n\t\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\t\n\t                break;\n\t            }\n\t\n\t        case 1:\n\t\n\t            if (_.isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.data = data;\n\t    options.params = _.extend({}, options.params, params);\n\t\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\t\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: {method: 'GET'},\n\t    save: {method: 'POST'},\n\t    query: {method: 'GET'},\n\t    update: {method: 'PUT'},\n\t    remove: {method: 'DELETE'},\n\t    delete: {method: 'DELETE'}\n\t\n\t};\n\t\n\tmodule.exports = _.resource = Resource;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var options = url, transform;\n\t\n\t    if (_.isString(url)) {\n\t        options = {url: url, params: params};\n\t    }\n\t\n\t    options = _.merge({}, Url.options, this.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, this.$vm);\n\t    }, this);\n\t\n\t    return transform(options);\n\t};\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [\n\t    __webpack_require__(35),\n\t    __webpack_require__(32),\n\t    __webpack_require__(33),\n\t    __webpack_require__(34)\n\t];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [], escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (_.isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\t\n\t    _.each(obj, function (value, key) {\n\t\n\t        hash = _.isObject(value) || _.isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tmodule.exports = _.url = Url;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Legacy Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var variables = [], url = next(options);\n\t\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\t\n\t        return '';\n\t    });\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\t\n\tfunction encodeUriSegment(value) {\n\t\n\t    return encodeUriQuery(value, true).\n\t        replace(/%26/gi, '&').\n\t        replace(/%3D/gi, '=').\n\t        replace(/%2B/gi, '+');\n\t}\n\t\n\tfunction encodeUriQuery(value, spaces) {\n\t\n\t    return encodeURIComponent(value).\n\t        replace(/%40/gi, '@').\n\t        replace(/%3A/gi, ':').\n\t        replace(/%24/g, '$').\n\t        replace(/%2C/gi, ',').\n\t        replace(/%20/g, (spaces ? '%20' : '+'));\n\t}\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Query Parameter Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\t\n\t   _.each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = _.url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root Prefix Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\t\n\tvar UrlTemplate = __webpack_require__(29);\n\t\n\tmodule.exports = function (options) {\n\t\n\t    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.17\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\tvar reservedTagRE = /^(slot|partial|component)$/;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    if (false) {\n\t      this._runtimeData = options.data;\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // if an internal watcher is pushed, but the internal\n\t    // queue is already depleted, we run it immediately.\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      watcher.run();\n\t      return;\n\t    }\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = Object.create(null);\n\t  this.newDeps = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDeps[id]) {\n\t    this.newDeps[id] = dep;\n\t    if (!this.deps[id]) {\n\t      this.deps[id] = dep;\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDeps = Object.create(null);\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var ids = Object.keys(this.deps);\n\t  var i = ids.length;\n\t  while (i--) {\n\t    var id = ids[i];\n\t    if (!this.newDeps[id]) {\n\t      this.deps[id].removeSub(this);\n\t    }\n\t  }\n\t  this.deps = this.newDeps;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var depIds = Object.keys(this.deps);\n\t  var i = depIds.length;\n\t  while (i--) {\n\t    this.deps[depIds[i]].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseFactory = new FragmentFactory(next._context || this.vm, next);\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t      this.factory = new FragmentFactory(this.vm, el);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseFactory && !this.elseFrag) {\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (false) {\n\t      if (current) current._inactive = true;\n\t      target._inactive = false;\n\t    }\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, getDefault(vm, options));\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getDefault(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    // #2366 or custom terminal directive\n\t    def: def || resolveAsset(options, 'directives', dirName)\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction scanSlots(template, content, vm) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = {};\n\t  var slots = template.querySelectorAll('slot');\n\t  if (slots.length) {\n\t    var hasDefault, slot, name;\n\t    for (var i = 0, l = slots.length; i < l; i++) {\n\t      slot = slots[i];\n\t      /* eslint-disable no-cond-assign */\n\t      if (name = slot.getAttribute('name')) {\n\t        select(slot, name);\n\t      } else if (false) {\n\t        warn('<slot :name=\"' + name + '\">: slot names cannot be dynamic.');\n\t      } else {\n\t        // default slot\n\t        hasDefault = true;\n\t      }\n\t      /* eslint-enable no-cond-assign */\n\t    }\n\t    if (hasDefault) {\n\t      contents['default'] = extractFragment(content.childNodes, content);\n\t    }\n\t  }\n\t\n\t  function select(slot, name) {\n\t    // named slot\n\t    var selector = '[slot=\"' + name + '\"]';\n\t    var nodes = content.querySelectorAll(selector);\n\t    if (nodes.length) {\n\t      contents[name] = extractFragment(nodes, content);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (node.parentNode === parent) {\n\t      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t        parent.removeChild(node);\n\t        node = parseTemplate(node);\n\t      }\n\t      frag.appendChild(node);\n\t    }\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude,\n\t\tscanSlots: scanSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var propsData = this._data;\n\t    var optionsDataFn = this.$options.data;\n\t    var optionsData = optionsDataFn && optionsDataFn();\n\t    var runtimeData;\n\t    if (false) {\n\t      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n\t      this._runtimeData = null;\n\t    }\n\t    if (optionsData) {\n\t      this._data = optionsData;\n\t      for (var prop in propsData) {\n\t        if (false) {\n\t          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t        }\n\t        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t          set(optionsData, prop, propsData[prop]);\n\t        }\n\t      }\n\t    }\n\t    var data = this._data;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      this._proxy(key);\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (false) {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // scan for slot distribution before compiling the content\n\t    // so that it's decoupeld from slot/directive compilation order\n\t    scanSlots(el, options._content, this);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      for (var key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains$1(item.$key, search) || contains$1(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains$1(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains$1(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains$1(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains$1(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.17';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (devtools) {\n\t  devtools.emit('init', Vue);\n\t} else if (false) {\n\t  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.cf471ae91923f3f9829e.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 8a6e4f1e1551447c443e\n **/","import Vue from 'vue'\nVue.use(require('vue-resource'))\nimport App from './App'\nimport Members from './Members'\n\n/* eslint-disable no-new */\nnew Vue({\n    el: 'body',\n    components: { App, Members },\n    data: {\n        page: '',\n        profileOfUser: '',\n        userInfo: []\n    },\n\n    ready: function () {\n        this.getPage()\n    },\n\n    methods: {\n        getPage: function () {\n            var queryString = window.location.search\n            queryString = queryString.substring(1)\n            if (!queryString) {\n                this.$set('page', '')\n            } else if (queryString === 'members') {\n                this.$set('page', queryString)\n            } else {\n\t\t\t\tvar arr = queryString.split('&')\n\t\t\t\tthis.$set('userInfo', arr)\n            }\n        }\n    }\n\n      // getProfileImage: function () {\n      // if (this.profileOfUser === '') {\n      //     this.$http.jsonp('https://randomuser.me/api/').then(function (response) {\n      //         var profile = response.data\n      //         this.$set('profileOfUser', profile)\n      //         console.log(profile)\n      //     }, { 'jsonp': 'callback' })\n      // }\n})\n\nVue.transition('fadein', {\n    enterClass: 'pulse',\n    leaveClass: 'fadeOut'\n})\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * Utility functions.\n */\n\nvar _ = exports, array = [], console = window.console;\n\n_.warn = function (msg) {\n    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n};\n\n_.error = function (msg) {\n    if (console) {\n        console.error(msg);\n    }\n};\n\n_.trim = function (str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n};\n\n_.toLower = function (str) {\n    return str ? str.toLowerCase() : '';\n};\n\n_.isArray = Array.isArray;\n\n_.isString = function (val) {\n    return typeof val === 'string';\n};\n\n_.isFunction = function (val) {\n    return typeof val === 'function';\n};\n\n_.isObject = function (obj) {\n    return obj !== null && typeof obj === 'object';\n};\n\n_.isPlainObject = function (obj) {\n    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n};\n\n_.options = function (fn, obj, options) {\n\n    options = options || {};\n\n    if (_.isFunction(options)) {\n        options = options.call(obj);\n    }\n\n    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n};\n\n_.each = function (obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (_.isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n};\n\n_.defaults = function (target, source) {\n\n    for (var key in source) {\n        if (target[key] === undefined) {\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n};\n\n_.extend = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg);\n    });\n\n    return target;\n};\n\n_.merge = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg, true);\n    });\n\n    return target;\n};\n\nfunction merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n                target[key] = [];\n            }\n            merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/util.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Promise adapter.\n */\n\nvar _ = require('./util');\nvar PromiseObj = window.Promise || require('./lib/promise');\n\nfunction Promise(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise.all = function (iterable, context) {\n    return new Promise(PromiseObj.all(iterable), context);\n};\n\nPromise.resolve = function (value, context) {\n    return new Promise(PromiseObj.resolve(value), context);\n};\n\nPromise.reject = function (reason, context) {\n    return new Promise(PromiseObj.reject(reason), context);\n};\n\nPromise.race = function (iterable, context) {\n    return new Promise(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return PromiseObj.reject(reason);\n        }\n    );\n};\n\np.success = function (callback) {\n\n    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/promise.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __webpack_public_path__ + \"logo.png?4e4d848\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/assets/logo.png\n ** module id = 3\n ** module chunks = 0\n **/","<template>\n    <div class=\"top-nav\">\n        <div class=\"container\">\n            \n            <img class=\"logo2 animated\" src=\"./assets/l2.png\" transition=\"fadein\"/>\n            <img class=\"logo animated\" src=\"./assets/logo.png\" transition=\"fadein\"/>\n        </div>\n    </div>\n    <div id=\"app\">\n        <div>\n            <div class=\"animated chat-box\" transition=\"fadein\">\n                <p>Hello, <span>Vishnu, is there anything you'd like to discuss privately with Dr. Sarabu today?</span>\n                    <p>\n                      <p>Feel free to write anything, these messages disappear after your doctor sees them.<p>\n            </div>\n          <div class=\"animated chat-box\" transition=\"fadein\">\n                <p>You can ask about topics such as sex, birth control, drink, drugs or gender questions.</p>\n            </div>\n\n        </div>\n                <div class=\"user-message\">\n                  <div class=\"user-container\" v-if=\"!thanks\">\n                      <form  action=\"http://otr.vishnu.io:5000/send\" method=\"post\">\n                        <div>\n                            <textarea v-model=\"message\" name=\"message\" class=\"textarea-box\"></textarea>\n                        </div>\n                        <input @click=\"thanks = !thanks\" type=\"submit\" class=\"button\" value=\"Send\">\n                        <input type=\"hidden\" name=\"phone_number\" value=\"+19085812326\">\n                      </form>\n                     \n                      </div>\n                </div>\n            <div v-if=\"thanks\" class=\"animated\" transition=\"fadein\">\n              <div class=\"chat-box-reply\">\n                <p>{{message}}<p>\n              </div>\n            </div>\n\n          <div v-if=\"thanks\"  class=\"animated chat-box\" transition=\"fadein\">\n            <p>Thanks Vishnu. The Doctor will address this on your next visit. Enjoy your day!\n            <p>\n          </div>\n         </div>\n\n\n\n  </template>\n<script>\n// import Thanks from './components/Thanks'\n\nexport default {\n  name: 'App',\n\n  data () {\n    return {\n      message: '',\n      patient_name: 'Sharon',\n      thanks: false,\n      userInfo: []\n    }\n  }\n}\n\n</script>\n\n\n\n\n\n\n\n<style>\nhtml {\n  height: 100%;\n}\n\n*{\n  box-sizing: border-box; \n}\n\n.container{\n  max-width: 480px;\n  margin: 0 auto;\n}\n\n.top-nav{\n  background: #e52625 !important;\n  height: 100px;\n  width: 100%;\n  top: 0;\n  display: inline-block;\n\n}\n\nbody {\nbox-sizing: border-box;\nmargin: 0;\nfont-family:  \"Josefin Sans\", Century Gothic,CenturyGothic,AppleGothic,sans-serif; \nbackground: #CFCFCF;\nfont-size: 16px;\n}\n\n#app {\n  display: inline-box;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  margin: 25px  auto 0 auto;\n}\n\n.logo {\n  width: 100px;\n  height: 100px;\n  float: right;\n}\n\n.logo2 {\n  width: 75%;\n  height: 80px;\n  float: left;\n}\n\n.button{\n  text-align: center;\n  right: 50%;\n  letter-spacing: .1em;\n  text-transform: uppercase;\n  color: #fff;\n  background: #c8362e;\n  padding: 0 25px;\n  line-height: 48px;\n  border: none;\n  cursor: pointer;\n  float: right;\n  max-width: 20%;\n  border: 1px solid #c8362e;\n\n}\n\n.button:hover{\n  color: #c8362e;\n  background: #fff;\n  border: 1px solid #c8362e;\n  padding: 0 23px;\n\n\n}\n\n.textarea-box{\n  height: 51px;\n  float: left;\n  width: 79%;\n  font-size: 16px;\n  font-family:  \"Josefin Sans\", Century Gothic,CenturyGothic,AppleGothic,sans-serif; \n}\n\n.chat-box, .chat-box-reply{\n  background: #fff;\n  padding: .2em 1em;\n  margin: 2em auto;\n  max-width: 480px;\n  width: 95%;\n  max-width: 600px;\n}\n\n.chat-box:after{\n    width: 0px;\n    height: 0px;\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-top: 20px solid #fff;\n    margin-left: 0;\n    width: 0;\n    content: \" \";\n    font-size: 0;\n    line-height: 0;\n    height: 0;\n    padding-top: 3em;\n    position: relative;\n    top: 20px;\n    bottom: -57px;\n}\n\n.chat-box-reply:after{\n    width: 0px;\n    height: 0px;\n    border-left: 20px solid transparent;\n    border-right: 20px solid transparent;\n    border-top: 20px solid #fff;\n    margin-left: 82%;\n    width: 0;\n    content: \" \";\n    font-size: 0;\n    line-height: 0;\n    height: 0;\n    padding-top: 3em;\n    position: relative;\n    top: 20px;\n    bottom: -57px;\n\n\n}\n\n\n\n.user-message{\n  display: inline-block;\n  width: 100%;\n  bottom: 0;\n  position: absolute;\n  margin: 0 auto;\n  background: #fff;\n  padding: .5em .5em;\n}\n\n.user-container{\n  margin: 0 auto;\n  max-width: 600px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?7b9ef264\n **/","<template>\n    <div class=\"top-nav\">\n        <div class=\"container\">\n            <h1> Welcome, Dr. Sarabu</h1>\n            <img class=\"logo animated\" src=\"./assets/logo.png\" transition=\"fadein\"/>\n        </div>\n    </div>\n    <div id=\"members\">\n        <div class=\"main-container\" >\n          <h2> You have <span class=\"animated\" transition=\"fadein\">{{numOfMessages === '' ? '0' : numOfMessages }} </span>New Message</h2>\n\n\n            <div  v-for=\"user in messages\" class=\"animated profile-box\" id=\"result\" transition=\"fadein\">\n\n            <div class=\"profile_img\"><img class=\"pro\" src=\"./assets/stud.png\"/></div>\n                <p>From: <b>Vishnu</b>, {{user.phone_number}}.<p>\n                <p>Message: {{user.message}}.<p>\n            </div>\n\n        </div>\n\n<!--             <div class=\"animated profile-box\" transition=\"fadein\">\n\n\n            <div class=\"profile_img\"><img class=\"pro\" src=\"./assets/stud.png\"/></div>\n                <p>You have one new message from, Vishnu.<p>\n            </div>\n -->\n\n\n<!--             <div  v-for=\"user in messages\" class=\"animated profile-box\" id=\"result\" transition=\"fadein\">\n\n            <div class=\"profile_img\"><img class=\"pro\" v-bind:src=\"profile['results'][0]['user']['picture']['medium']\"/></div>\n                <p>From: {{user.phone_number}}.<p>\n                <p>Message: {{user.message}}.<p>\n            </div>\n\n        </div> -->\n\n</div>\n\n\n         </div>\n  </template>\n<script>\n// import Thanks from './components/Thanks'\n\n// import $ from 'jquery';\n// $('body').addClass('baba')\n\n// $.get('http://otr.vishnu.io:5000/messages&callback=?', function(data) {\n//   $('#result').html(data)\n//   console.log(data)\n// });\n\nexport default {\n  name: 'Members',\n\n  data () {\n    return {\n      messages: '',\n      numOfMessages: '',\n      profile: ''\n    }\n  },\n\n  ready () {\n    this.getProfileImage()\n    this.getMembers()\n  },\n\n    methods: {\n\n     getMembers() {\n\n        this.$http.get('http://otr.vishnu.io/messages.php', function (data) {\n        var msg = data\n        this.$set('messages', msg)\n        console.log(msg)\n        }, {'jsonp': 'callback'})\n        setTimeout(this.getMembers, 2000);\n    },\n\n    // getData() {\n    //     var xhr = new XMLHttpRequest()\n    //     var apiUrl = 'http://otr.vishnu.io/messages.php'\n    //     var self = this\n    //     xhr.open('GET', apiUrl + self.branch)\n    //     xhr.onload = function () {\n    //         self.commits = JSON.parse(xhr.responseText)\n    //     }\n    //     xhr.send()   \n    // },\n    getProfileImage() {\n        this.$http.get('https://randomuser.me/api/').then(function (response) {\n        var profile = response.data\n        this.$set('profile', profile)\n        var prof = this.messages.length\n        this.$set('numOfMessages', prof)\n      })\n    }\n\n  }\n}\n\n</script>\n\n\n\n\n\n\n\n<style>\nhtml {\n  height: 100%;\n}\np{\n  line-height: .8em;\n}\n\n*{\n  box-sizing: border-box; \n}\nh1{\n  color: #fff;\n  display: inline-block;\n  font-size: 1.5em;\n  \n}\n.profile_img{\n\n}\n\n.fadeOut{\n  animation-duration: 0s;\n}\n\n img.pro{\n    border-radius: 66px;\n    height:70px;\n    display: inline-block;\n    width: 70px;\n    float: left;\n    box-sizing: border-box;\n    padding: .5em;\n    margin-right: 1em\n}\n\n\n\n.container{\n  max-width: 600px;\n  margin: 0 auto;\n  width: 95%;\n  padding: 0 1em;\n}\n\n.main-container{\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 0 1em;\n}\n\n.top-nav{\n  background: #c8362e;\n  height: 100px;\n  width: 100%;\n  top: 0;\n  display: inline-block;\n\n}\n\nbody {\nbox-sizing: border-box;\nmargin: 0;\nfont-family:  \"Josefin Sans\", Century Gothic,CenturyGothic,AppleGothic,sans-serif; \nbackground: #CFCFCF;\nfont-size: 16px;\n}\n\n#members {\n  display: inline-box;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  margin: 2em  auto 0 auto;\n}\n\n.logo {\n  width: 25%;\n  float: right;\n  display: block;\n\n}\n\n.button{\n  text-align: center;\n  right: 50%;\n  letter-spacing: .1em;\n  text-transform: uppercase;\n  color: #fff;\n  background: #c8362e;\n  padding: 0 25px;\n  line-height: 48px;\n  border: none;\n  cursor: pointer;\n  float: right;\n  max-width: 20%;\n  border: 1px solid #c8362e;\n\n}\n\n.button:hover{\n  color: #c8362e;\n  background: #fff;\n  border: 1px solid #c8362e;\n  padding: 0 23px;\n\n\n}\n\n.textarea-box{\n  height: 51px;\n  float: left;\n  width: 79%;\n  font-size: 16px;\n  font-family:  \"Josefin Sans\", Century Gothic,CenturyGothic,AppleGothic,sans-serif; \n}\n\n.profile-box{\n  background: #fff;\n  padding: 1em 1em;\n  margin: 2em auto;\n  max-width: 480px;\n  width: 95%;\n  max-width: 600px;\n  display: block;\n  height: 100px;\n}\n\n\n\n\n.user-message{\n  display: inline-block;\n  width: 100%;\n  bottom: 0;\n  position: absolute;\n  margin: 0 auto;\n  background: #fff;\n  padding: .5em .5em;\n}\n\n.user-container{\n  margin: 0 auto;\n  max-width: 600px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Members.vue?58d4ef20\n **/","module.exports = __webpack_public_path__ + \"l2.png?457e581\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/assets/l2.png\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = __webpack_public_path__ + \"stud.png?2badad1\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/assets/stud.png\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = \"<div class=top-nav> <div class=container> <img class=\\\"logo2 animated\\\" src=\" + require(\"./assets/l2.png\") + \" transition=fadein /> <img class=\\\"logo animated\\\" src=\" + require(\"./assets/logo.png\") + \" transition=fadein /> </div> </div> <div id=app> <div> <div class=\\\"animated chat-box\\\" transition=fadein> <p>Hello, <span>Vishnu, is there anything you'd like to discuss privately with Dr. Sarabu today?</span> </p><p> </p><p>Feel free to write anything, these messages disappear after your doctor sees them.</p><p> </p></div> <div class=\\\"animated chat-box\\\" transition=fadein> <p>You can ask about topics such as sex, birth control, drink, drugs or gender questions.</p> </div> </div> <div class=user-message> <div class=user-container v-if=!thanks> <form action=http://otr.vishnu.io:5000/send method=post> <div> <textarea v-model=message name=message class=textarea-box></textarea> </div> <input @click=\\\"thanks = !thanks\\\" type=submit class=button value=Send> <input type=hidden name=phone_number value=+19085812326> </form> </div> </div> <div v-if=thanks class=animated transition=fadein> <div class=chat-box-reply> <p>{{message}}</p><p> </p></div> </div> <div v-if=thanks class=\\\"animated chat-box\\\" transition=fadein> <p>Thanks Vishnu. The Doctor will address this on your next visit. Enjoy your day! </p><p> </p></div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = \"<div class=top-nav> <div class=container> <h1> Welcome, Dr. Sarabu</h1> <img class=\\\"logo animated\\\" src=\" + require(\"./assets/logo.png\") + \" transition=fadein /> </div> </div> <div id=members> <div class=main-container> <h2> You have <span class=animated transition=fadein>{{numOfMessages === '' ? '0' : numOfMessages }} </span>New Message</h2> <div v-for=\\\"user in messages\\\" class=\\\"animated profile-box\\\" id=result transition=fadein> <div class=profile_img><img class=pro src=\" + require(\"./assets/stud.png\") + \" /></div> <p>From: <b>Vishnu</b>, {{user.phone_number}}.</p><p> </p><p>Message: {{user.message}}.</p><p> </p></div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Members.vue\n ** module id = 11\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 12\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Members.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Members.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Members.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Members.vue\n ** module id = 13\n ** module chunks = 0\n **/","/**\n * Before Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (_.isFunction(request.beforeSend)) {\n            request.beforeSend.call(this, request);\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/before.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Base client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\nvar xhrClient = require('./xhr');\n\nmodule.exports = function (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[_.toLower(name)];\n                }\n\n                return headers;\n            };\n\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n\n};\n\nfunction parseHeaders(str) {\n\n    var headers = {}, value, name, i;\n\n    if (_.isString(str)) {\n        _.each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = _.trim(_.toLower(row.slice(0, i)));\n            value = _.trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (_.isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n\n            } else {\n\n                headers[name] = value;\n            }\n\n        });\n    }\n\n    return headers;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/index.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * JSONP client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({type: 'cancel'});\n        };\n\n        script = document.createElement('script');\n        script.src = _.url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function (event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/jsonp.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * XDomain client (Internet Explorer).\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText;\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xdr.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * XMLHttp client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xhr.responseText;\n            response.status = xhr.status;\n            response.statusText = xhr.statusText;\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (_.isPlainObject(request.xhr)) {\n            _.extend(xhr, request.xhr);\n        }\n\n        if (_.isPlainObject(request.upload)) {\n            _.extend(xhr.upload, request.upload);\n        }\n\n        _.each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xhr.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * CORS Interceptor.\n */\n\nvar _ = require('../util');\nvar xdrClient = require('./client/xdr');\nvar xhrCors = 'withCredentials' in new XMLHttpRequest();\nvar originUrl = _.url.parse(location.href);\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.crossOrigin === null) {\n            request.crossOrigin = crossOrigin(request);\n        }\n\n        if (request.crossOrigin) {\n\n            if (!xhrCors) {\n                request.client = xdrClient;\n            }\n\n            request.emulateHTTP = false;\n        }\n\n        return request;\n    }\n\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = _.url.parse(_.url(request));\n\n    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/cors.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * Header Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        request.method = request.method.toUpperCase();\n        request.headers = _.extend({}, _.http.headers.common,\n            !request.crossOrigin ? _.http.headers.custom : {},\n            _.http.headers[request.method.toLowerCase()],\n            request.headers\n        );\n\n        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n            _.extend(request.params, request.data);\n            delete request.data;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/header.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Service for sending network requests.\n */\n\nvar _ = require('../util');\nvar Client = require('./client');\nvar Promise = require('../promise');\nvar interceptor = require('./interceptor');\nvar jsonType = {'Content-Type': 'application/json'};\n\nfunction Http(url, options) {\n\n    var client = Client, request, promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, this.$vm)(client);\n    }, this);\n\n    options = _.isObject(url) ? url : _.extend({url: url}, options);\n    request = _.merge({}, Http.options, this.$options, options);\n    promise = client(request).bind(this.$vm).then(function (response) {\n\n        return response.ok ? response : Promise.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            _.error(response);\n        }\n\n        return Promise.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.interceptors = [\n    require('./before'),\n    require('./timeout'),\n    require('./jsonp'),\n    require('./method'),\n    require('./mime'),\n    require('./header'),\n    require('./cors')\n];\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: {'Accept': 'application/json, text/plain, */*'},\n    custom: {'X-Requested-With': 'XMLHttpRequest'}\n};\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (_.isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (_.isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, _.extend({method: method, data: data, success: success}, options));\n    };\n});\n\nmodule.exports = _.http = Http;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/index.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Interceptor factory.\n */\n\nvar _ = require('../util');\nvar Promise = require('../promise');\n\nmodule.exports = function (handler, vm) {\n\n    return function (client) {\n\n        if (_.isFunction(handler)) {\n            handler = handler.call(vm, Promise);\n        }\n\n        return function (request) {\n\n            if (_.isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (_.isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n};\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/interceptor.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * JSONP Interceptor.\n */\n\nvar jsonpClient = require('./client/jsonp');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.method == 'JSONP') {\n            request.client = jsonpClient;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/jsonp.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * HTTP method override Interceptor.\n */\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n            request.headers['X-HTTP-Method-Override'] = request.method;\n            request.method = 'POST';\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/method.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Mime Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateJSON && _.isPlainObject(request.data)) {\n            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            request.data = _.url.params(request.data);\n        }\n\n        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n            delete request.headers['Content-Type'];\n        }\n\n        if (_.isPlainObject(request.data)) {\n            request.data = JSON.stringify(request.data);\n        }\n\n        return request;\n    },\n\n    response: function (response) {\n\n        try {\n            response.data = JSON.parse(response.data);\n        } catch (e) {}\n\n        return response;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/mime.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * Timeout Interceptor.\n */\n\nmodule.exports = function () {\n\n    var timeout;\n\n    return {\n\n        request: function (request) {\n\n            if (request.timeout) {\n                timeout = setTimeout(function () {\n                    request.cancel();\n                }, request.timeout);\n            }\n\n            return request;\n        },\n\n        response: function (response) {\n\n            clearTimeout(timeout);\n\n            return response;\n        }\n\n    };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/timeout.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Install plugin.\n */\n\nfunction install(Vue) {\n\n    var _ = require('./util');\n\n    _.config = Vue.config;\n    _.warning = Vue.util.warn;\n    _.nextTick = Vue.util.nextTick;\n\n    Vue.url = require('./url');\n    Vue.http = require('./http');\n    Vue.resource = require('./resource');\n    Vue.Promise = require('./promise');\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return _.options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return _.options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                return function (executor) {\n                    return new Vue.Promise(executor, this);\n                }.bind(this);\n            }\n        }\n\n    });\n}\n\nif (window.Vue) {\n    Vue.use(install);\n}\n\nmodule.exports = install;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/index.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar _ = require('../util');\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise.reject = function (r) {\n    return new Promise(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise.resolve = function (x) {\n    return new Promise(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise.all = function all(iterable) {\n    return new Promise(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise.race = function race(iterable) {\n    return new Promise(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = Promise.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var promise = this;\n\n    _.nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/promise.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nexports.expand = function (url, params, variables) {\n\n    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n};\n\nexports.parse = function (template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return exports.encodeReserved(literal);\n                }\n            });\n        }\n    };\n};\n\nexports.getValues = function (context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (this.isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            result.push(this.encodeValue(operator, value[k], k));\n                        }\n                    }, this);\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        tmp.push(this.encodeValue(operator, value));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(this.encodeValue(operator, value[k].toString()));\n                        }\n                    }, this);\n                }\n\n                if (this.isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n};\n\nexports.isDefined = function (value) {\n    return value !== undefined && value !== null;\n};\n\nexports.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n};\n\nexports.encodeValue = function (operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n};\n\nexports.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/url-template.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * Service for interacting with RESTful services.\n */\n\nvar _ = require('./util');\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this, resource = {};\n\n    actions = _.extend({},\n        Resource.actions,\n        actions\n    );\n\n    _.each(actions, function (action, name) {\n\n        action = _.merge({url: url, params: params || {}}, options, action);\n\n        resource[name] = function () {\n            return (self.$http || _.http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = _.extend({}, action), params = {}, data, success, error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (_.isFunction(args[1])) {\n\n                if (_.isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (_.isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = _.extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\nmodule.exports = _.resource = Resource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/resource.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * Service for URL templating.\n */\n\nvar _ = require('../util');\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var options = url, transform;\n\n    if (_.isString(url)) {\n        options = {url: url, params: params};\n    }\n\n    options = _.merge({}, Url.options, this.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, this.$vm);\n    }, this);\n\n    return transform(options);\n};\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [\n    require('./template'),\n    require('./legacy'),\n    require('./query'),\n    require('./root')\n];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (_.isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\n    _.each(obj, function (value, key) {\n\n        hash = _.isObject(value) || _.isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nmodule.exports = _.url = Url;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/index.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * Legacy Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var variables = [], url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (spaces ? '%20' : '+'));\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/legacy.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Query Parameter Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\n   _.each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = _.url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/query.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * Root Prefix Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var url = next(options);\n\n    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/root.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar UrlTemplate = require('../lib/url-template');\n\nmodule.exports = function (options) {\n\n    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/template.js\n ** module id = 35\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.17\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a non-enumerable property\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\nvar reservedTagRE = /^(slot|partial|component)$/;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    if (process.env.NODE_ENV !== 'production') {\n      this._runtimeData = options.data;\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // if an internal watcher is pushed, but the internal\n    // queue is already depleted, we run it immediately.\n    if (internalQueueDepleted && !watcher.user) {\n      watcher.run();\n      return;\n    }\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = isFn ? expOrFn.toString() : expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = Object.create(null);\n  this.newDeps = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDeps[id]) {\n    this.newDeps[id] = dep;\n    if (!this.deps[id]) {\n      this.deps[id] = dep;\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDeps = Object.create(null);\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var ids = Object.keys(this.deps);\n  var i = ids.length;\n  while (i--) {\n    var id = ids[i];\n    if (!this.newDeps[id]) {\n      this.deps[id].removeSub(this);\n    }\n  }\n  this.deps = this.newDeps;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var depIds = Object.keys(this.deps);\n  var i = depIds.length;\n  while (i--) {\n    this.deps[depIds[i]].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseFactory = new FragmentFactory(next._context || this.vm, next);\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n      this.factory = new FragmentFactory(this.vm, el);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseFactory && !this.elseFrag) {\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (process.env.NODE_ENV !== 'production') {\n      if (current) current._inactive = true;\n      target._inactive = false;\n    }\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, getDefault(vm, options));\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getDefault(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    // #2366 or custom terminal directive\n    def: def || resolveAsset(options, 'directives', dirName)\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction scanSlots(template, content, vm) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = {};\n  var slots = template.querySelectorAll('slot');\n  if (slots.length) {\n    var hasDefault, slot, name;\n    for (var i = 0, l = slots.length; i < l; i++) {\n      slot = slots[i];\n      /* eslint-disable no-cond-assign */\n      if (name = slot.getAttribute('name')) {\n        select(slot, name);\n      } else if (process.env.NODE_ENV !== 'production' && (name = getBindAttr(slot, 'name'))) {\n        warn('<slot :name=\"' + name + '\">: slot names cannot be dynamic.');\n      } else {\n        // default slot\n        hasDefault = true;\n      }\n      /* eslint-enable no-cond-assign */\n    }\n    if (hasDefault) {\n      contents['default'] = extractFragment(content.childNodes, content);\n    }\n  }\n\n  function select(slot, name) {\n    // named slot\n    var selector = '[slot=\"' + name + '\"]';\n    var nodes = content.querySelectorAll(selector);\n    if (nodes.length) {\n      contents[name] = extractFragment(nodes, content);\n    }\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @param {Element} parent\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (node.parentNode === parent) {\n      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n        parent.removeChild(node);\n        node = parseTemplate(node);\n      }\n      frag.appendChild(node);\n    }\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude,\n\tscanSlots: scanSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var propsData = this._data;\n    var optionsDataFn = this.$options.data;\n    var optionsData = optionsDataFn && optionsDataFn();\n    var runtimeData;\n    if (process.env.NODE_ENV !== 'production') {\n      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n      this._runtimeData = null;\n    }\n    if (optionsData) {\n      this._data = optionsData;\n      for (var prop in propsData) {\n        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop) && !hasOwn(runtimeData, prop)) {\n          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n        }\n        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n          set(optionsData, prop, propsData[prop]);\n        }\n      }\n    }\n    var data = this._data;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      this._proxy(key);\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // scan for slot distribution before compiling the content\n    // so that it's decoupeld from slot/directive compilation order\n    scanSlots(el, options._content, this);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      for (var key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains$1(item.$key, search) || contains$1(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains$1(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains$1(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains$1(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains$1(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.17';\n\n// devtools global hook\n/* istanbul ignore next */\nif (devtools) {\n  devtools.emit('init', Vue);\n} else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 36\n ** module chunks = 0\n **/"],"sourceRoot":""}